{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\site\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Button from '@material-ui/core/Button';\n\nfunction getPosts() {\n  return [{\n    id: 'hello-nextjs',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-nextjs',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-nextjs',\n    title: 'Deploy apps with ZEIT'\n  }];\n}\n\nvar PostLink = function PostLink(_ref) {\n  var post = _ref.post;\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(post.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, post.title)));\n};\n\nvar Index = function Index(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"_next/static/headshot.jpg\",\n    height: \"160\",\n    width: \"120\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"MijnWesley\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Hello World\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Welkom op mijn site\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, getPosts().map(function (post) {\n    return React.createElement(PostLink, {\n      key: post.id,\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Batman TV Shows\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["D:\\site\\pages\\index.js"],"names":["Layout","Link","fetch","Button","getPosts","id","title","PostLink","post","Index","props","map","shows","show","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction getPosts() {\r\n  return [\r\n    { id: 'hello-nextjs', title: 'Hello Next.js' },\r\n    { id: 'learn-nextjs', title: 'Learn Next.js is awesome' },\r\n    { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT' }\r\n  ];\r\n}\r\n\r\nconst PostLink = ({ post }) => (\r\n  <li>\r\n    <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\r\n      <a>{post.title}</a>\r\n    </Link>\r\n  </li>\r\n);\r\n\r\nconst Index = props => {\r\n  return (\r\n    <Layout>\r\n        <img src=\"_next/static/headshot.jpg\" height=\"160\" width=\"120\"></img>\r\n      <h1>MijnWesley</h1>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n      Hello World\r\n    </Button> \r\n    <p>Welkom op mijn site</p>\r\n      <ul>\r\n        {getPosts().map(post => (\r\n          <PostLink key={post.id} post={post} />\r\n        ))}\r\n      </ul>\r\n    <h1>Batman TV Shows</h1>\r\n    <ul>\r\n      {props.shows.map(show => (\r\n        <li key={show.id}>\r\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n            <a>{show.name}</a>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async function() {\r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n    const data = await res.json();\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n  \r\n    return {\r\n      shows: data.map(entry => entry.show)\r\n    };\r\n  };\r\n  \r\n  export default Index;"]},"metadata":{},"sourceType":"module"}